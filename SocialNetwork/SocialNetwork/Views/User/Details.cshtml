@model SocialNetwork.Models.User


@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>User</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.UserId)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.UserId)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Gender)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Gender)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Age)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Age)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Location)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Location)
        </dd>
    </dl>
</div>


<ul style="width: 20%; float:left">
    <h3>Followers:</h3>
    @{
        if (Model.Followers != null)
        {
            foreach (var follower in Model.Followers)
            {
                <li>@follower</li>
            }
        }
    }
</ul>

<ul style="width: 20%; float: left">
    <h3>Circles:</h3>
    @{
        if (Model.Circles != null)
        {
            foreach (var circle in Model.Circles)
            {
                <li>@circle</li>
            }
        }
    }
</ul>

<ul style="width: 20%;float:left">
    <h3>You follow:</h3>
    @{
        if (Model.Following != null)
        {
            foreach (var follow in Model.Following)
            {
                <li>@follow</li>
            }
        }
    }
</ul>

<ul style="width: 20%; float: left">
    <h3>Blocked:</h3>
    @{
        if (Model.Blocked != null)
        {
            foreach (var block in Model.Blocked)
            {
                <li>@block</li>
            }
        }
    }
</ul>


<br/>
<br />
<br />
<br />
<br />

<h5>Add a follower:</h5>
<form asp-controller="User" asp-action="AddFollower">
    <input type="hidden" asp-for="UserId" value="@Model.UserId">
    <label>UserId of person who you want to follow you: </label>
    <input type="text" id="userToFollowId" name="userToFollowId" />
    <input type="submit" />
</form>


<h5>Follow a user:</h5>
<form asp-controller="User" asp-action="AddFollowing">
    <input type="hidden" asp-for="UserId" value="@Model.UserId">
    <label>UserId of person you want to follow: </label>
    <input type="text" id="userToFollowingId" name="userToFollowingId" />
    <input type="submit" />
</form>

<h5>Block a user:</h5>
<form asp-controller="User" asp-action="AddBlocking">
    <input type="hidden" asp-for="UserId" value="@Model.UserId">
    <label>UserId of person you want to block: </label>
    <input type="text" id="userToBlockId" name="userToBlockId" />
    <input type="submit" />
</form>
<h5>Join a circle:</h5>
<form asp-controller="Circle" asp-action="AddUser">
    <input type="hidden" asp-for="UserId" value="@Model.UserId" />
    <label>Name of the circle, you want to follow</label>
    <input type="text" id="CircleName" name="CircleName" />
    <input type="submit" />
</form>

<div>
    @Html.ActionLink("Edit", "Edit", new { id = Model.UserId }) |
    <a asp-action="Index">Back to List</a>
</div>

